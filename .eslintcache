[{"E:\\repositories\\rocketseat\\gostack\\n3\\gobarber-web\\src\\index.tsx":"1","E:\\repositories\\rocketseat\\gostack\\n3\\gobarber-web\\src\\App.tsx":"2","E:\\repositories\\rocketseat\\gostack\\n3\\gobarber-web\\src\\styles\\global.ts":"3","E:\\repositories\\rocketseat\\gostack\\n3\\gobarber-web\\src\\pages\\SignIn\\index.tsx":"4","E:\\repositories\\rocketseat\\gostack\\n3\\gobarber-web\\src\\pages\\SignIn\\styles.ts":"5","E:\\repositories\\rocketseat\\gostack\\n3\\gobarber-web\\src\\components\\Button\\index.tsx":"6","E:\\repositories\\rocketseat\\gostack\\n3\\gobarber-web\\src\\components\\Input\\index.tsx":"7","E:\\repositories\\rocketseat\\gostack\\n3\\gobarber-web\\src\\components\\Button\\styles.ts":"8","E:\\repositories\\rocketseat\\gostack\\n3\\gobarber-web\\src\\components\\Input\\styles.ts":"9","E:\\repositories\\rocketseat\\gostack\\n3\\gobarber-web\\src\\pages\\SignUp\\index.tsx":"10","E:\\repositories\\rocketseat\\gostack\\n3\\gobarber-web\\src\\pages\\SignUp\\styles.ts":"11"},{"size":198,"mtime":1608650356882,"results":"12","hashOfConfig":"13"},{"size":273,"mtime":1608651325431,"results":"14","hashOfConfig":"13"},{"size":455,"mtime":1608609713560,"results":"15","hashOfConfig":"13"},{"size":889,"mtime":1608650491048,"results":"16","hashOfConfig":"13"},{"size":1149,"mtime":1608651151414,"results":"17","hashOfConfig":"13"},{"size":315,"mtime":1608650234905,"results":"18","hashOfConfig":"13"},{"size":1359,"mtime":1608667289101,"results":"19","hashOfConfig":"13"},{"size":375,"mtime":1608651077815,"results":"20","hashOfConfig":"13"},{"size":740,"mtime":1608667069363,"results":"21","hashOfConfig":"13"},{"size":1651,"mtime":1608668136632,"results":"22","hashOfConfig":"13"},{"size":1149,"mtime":1608651439701,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1euf8",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"E:\\repositories\\rocketseat\\gostack\\n3\\gobarber-web\\src\\index.tsx",[],["49","50","51","52","53"],"E:\\repositories\\rocketseat\\gostack\\n3\\gobarber-web\\src\\App.tsx",[],"E:\\repositories\\rocketseat\\gostack\\n3\\gobarber-web\\src\\styles\\global.ts",[],"E:\\repositories\\rocketseat\\gostack\\n3\\gobarber-web\\src\\pages\\SignIn\\index.tsx",[],"E:\\repositories\\rocketseat\\gostack\\n3\\gobarber-web\\src\\pages\\SignIn\\styles.ts",[],"E:\\repositories\\rocketseat\\gostack\\n3\\gobarber-web\\src\\components\\Button\\index.tsx",[],"E:\\repositories\\rocketseat\\gostack\\n3\\gobarber-web\\src\\components\\Input\\index.tsx",["54"],"import React, {\n  InputHTMLAttributes,\n  useEffect,\n  useRef,\n  useState,\n  useCallback,\n} from 'react';\nimport { IconBaseProps } from 'react-icons';\nimport { useField } from '@unform/core';\nimport { Container } from './styles';\n\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n  name: string;\n  icon?: React.ComponentType<IconBaseProps>;\n}\nconst Input: React.FC<InputProps> = ({ name, icon: Icon, ...rest }) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const [isFocused, setIsFocused] = useState(false);\n  const [isFilled, setIsFilled] = useState(false);\n  const { fieldName, defaultValue, error, registerField } = useField(name);\n\n  const handlerInputFocused = useCallback(() => {\n    setIsFocused(true);\n  }, []);\n\n  const handlerInputBlur = useCallback(() => {\n    setIsFocused(false);\n\n    setIsFilled(!!inputRef.current?.value);\n  }, []);\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'value',\n    });\n  }, [fieldName, registerField]);\n\n  return (\n    <Container isFilled={isFilled} isFocused={isFocused}>\n      {Icon && <Icon size={20} />}\n      <input\n        onFocus={handlerInputFocused}\n        onBlur={handlerInputBlur}\n        defaultValue={defaultValue}\n        ref={inputRef}\n        {...rest}\n      />\n    </Container>\n  );\n};\n\nexport default Input;\n","E:\\repositories\\rocketseat\\gostack\\n3\\gobarber-web\\src\\components\\Button\\styles.ts",[],"E:\\repositories\\rocketseat\\gostack\\n3\\gobarber-web\\src\\components\\Input\\styles.ts",[],"E:\\repositories\\rocketseat\\gostack\\n3\\gobarber-web\\src\\pages\\SignUp\\index.tsx",["55"],"import React, { useCallback } from 'react';\nimport { FiArrowLeft, FiMail, FiUser, FiLock } from 'react-icons/fi';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport logoImg from '../../assets/logo.svg';\n\nimport Button from '../../components/Button';\nimport Input from '../../components/Input';\nimport { Container, Content, Background } from './styles';\n\nconst SignUp: React.FC = () => {\n  const handlerSubmit = useCallback(async (data: Record<string, unknown>) => {\n    try {\n      const schema = Yup.object().shape({\n        name: Yup.string().required('Nome obrigatório'),\n        email: Yup.string()\n          .required('E-mail obrigatório')\n          .email('Digite um email válido'),\n        password: Yup.string().min(6, 'No mínimo 6 dígitos'),\n      });\n      await schema.validate(data, {\n        abortEarly: false,\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }, []);\n  return (\n    <Container>\n      <Background />\n      <Content>\n        <img src={logoImg} alt=\"Gobarber\" />\n        <Form onSubmit={handlerSubmit}>\n          <h1>Faca seu cadastro</h1>\n          <Input icon={FiUser} name=\"name\" placeholder=\"Nome\" />\n          <Input icon={FiMail} name=\"email\" placeholder=\"E-mail\" />\n          <Input\n            icon={FiLock}\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Senha\"\n          />\n          <Button type=\"submit\">Cadastrar</Button>\n          <a href=\"forgot\">Criar conta</a>\n        </Form>\n\n        <a href=\"login\">\n          <FiArrowLeft />\n          Voltar para logon\n        </a>\n      </Content>\n    </Container>\n  );\n};\n\nexport default SignUp;\n","E:\\repositories\\rocketseat\\gostack\\n3\\gobarber-web\\src\\pages\\SignUp\\styles.ts",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":20,"column":36,"nodeType":"68","messageId":"69","endLine":20,"endColumn":41},{"ruleId":"70","severity":1,"message":"71","line":25,"column":7,"nodeType":"72","messageId":"73","endLine":25,"endColumn":18},"lines-around-directive",["74"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","no-console","Unexpected console statement.","MemberExpression","unexpected","padding-line-between-statements"]